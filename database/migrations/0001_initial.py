# Generated by Django 3.2.6 on 2021-09-26 12:06

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email_id', models.EmailField(max_length=200, primary_key=True, serialize=False, unique=True)),
                ('mobile_no', models.CharField(default='0', max_length=200)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='course_id',
            fields=[
                ('course_id', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('course_name', models.TextField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='exam_details',
            fields=[
                ('exam_code', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('exam_title', models.TextField()),
                ('date', models.DateField()),
                ('start_time', models.TimeField()),
                ('duration', models.DurationField()),
                ('no_of_ques', models.IntegerField()),
                ('max_marks', models.IntegerField()),
                ('course_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.course_id')),
                ('email_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='role_id',
            fields=[
                ('role_id', models.IntegerField(primary_key=True, serialize=False)),
                ('role_name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='score_table',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scored_marks', models.IntegerField()),
                ('email_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('exam_code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.exam_details')),
                ('role_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.role_id')),
            ],
        ),
        migrations.CreateModel(
            name='registration_table',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('exam_code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.exam_details')),
                ('role_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.role_id')),
            ],
        ),
        migrations.CreateModel(
            name='ques_table',
            fields=[
                ('ques_id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('ques', models.TextField(max_length=500)),
                ('option1', models.CharField(max_length=200)),
                ('option2', models.CharField(max_length=200)),
                ('option3', models.CharField(max_length=200)),
                ('option4', models.CharField(max_length=200)),
                ('correct', models.BooleanField()),
                ('marks', models.IntegerField()),
                ('exam_code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.exam_details')),
            ],
        ),
        migrations.CreateModel(
            name='query_table',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('query', models.TextField(max_length=500)),
                ('email_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('exam_code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.exam_details')),
                ('role_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.role_id')),
            ],
        ),
        migrations.CreateModel(
            name='notes_table',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notes', models.TextField(max_length=500)),
                ('email_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('exam_code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.exam_details')),
            ],
        ),
        migrations.CreateModel(
            name='courses_availed',
            fields=[
                ('serial_no', models.AutoField(primary_key=True, serialize=False)),
                ('course_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.course_id')),
                ('email_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('role_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.role_id')),
            ],
        ),
        migrations.CreateModel(
            name='class_stu_tech',
            fields=[
                ('class_stu_tech', models.IntegerField()),
                ('serial_no', models.AutoField(primary_key=True, serialize=False)),
                ('email_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('role_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.role_id')),
            ],
        ),
        migrations.CreateModel(
            name='answer_table',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('option_marked', models.IntegerField()),
                ('check_correct', models.BooleanField()),
                ('email_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('exam_code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.exam_details')),
                ('ques_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.ques_table')),
                ('role_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='database.role_id')),
            ],
        ),
    ]
